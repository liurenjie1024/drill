/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.github.zeus.expr.drill;

import io.github.zeus.expr.ZeusFunctionEntry;

import static io.github.zeus.rpc.ScalarFuncId.EQ_I16;
import static io.github.zeus.rpc.ScalarFuncId.LE_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.GT_F8;
import static io.github.zeus.rpc.ScalarFuncId.GT_STR;
import static io.github.zeus.rpc.ScalarFuncId.LE_F8;
import static io.github.zeus.rpc.ScalarFuncId.NE_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.LE_I64;
import static io.github.zeus.rpc.ScalarFuncId.LE_F4;
import static io.github.zeus.rpc.ScalarFuncId.GE_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.GE_F8;
import static io.github.zeus.rpc.ScalarFuncId.EQ_F4;
import static io.github.zeus.rpc.ScalarFuncId.NE_I8;
import static io.github.zeus.rpc.ScalarFuncId.LE_I32;
import static io.github.zeus.rpc.ScalarFuncId.GT_F4;
import static io.github.zeus.rpc.ScalarFuncId.LT_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.LT_I64;
import static io.github.zeus.rpc.ScalarFuncId.LT_I32;
import static io.github.zeus.rpc.ScalarFuncId.LT_I8;
import static io.github.zeus.rpc.ScalarFuncId.LE_I16;
import static io.github.zeus.rpc.ScalarFuncId.NE_I32;
import static io.github.zeus.rpc.ScalarFuncId.GT_I8;
import static io.github.zeus.rpc.ScalarFuncId.GE_STR;
import static io.github.zeus.rpc.ScalarFuncId.LT_I16;
import static io.github.zeus.rpc.ScalarFuncId.EQ_STR;
import static io.github.zeus.rpc.ScalarFuncId.NE_I16;
import static io.github.zeus.rpc.ScalarFuncId.EQ_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.NE_F4;
import static io.github.zeus.rpc.ScalarFuncId.EQ_I8;
import static io.github.zeus.rpc.ScalarFuncId.GT_BOOL;
import static io.github.zeus.rpc.ScalarFuncId.NE_I64;
import static io.github.zeus.rpc.ScalarFuncId.LT_STR;
import static io.github.zeus.rpc.ScalarFuncId.GE_I8;
import static io.github.zeus.rpc.ScalarFuncId.EQ_F8;
import static io.github.zeus.rpc.ScalarFuncId.LE_STR;
import static io.github.zeus.rpc.ScalarFuncId.GE_I16;
import static io.github.zeus.rpc.ScalarFuncId.GE_F4;
import static io.github.zeus.rpc.ScalarFuncId.GT_I16;
import static io.github.zeus.rpc.ScalarFuncId.GT_I32;
import static io.github.zeus.rpc.ScalarFuncId.LT_F8;
import static io.github.zeus.rpc.ScalarFuncId.GE_I64;
import static io.github.zeus.rpc.ScalarFuncId.EQ_I64;
import static io.github.zeus.rpc.ScalarFuncId.LT_F4;
import static io.github.zeus.rpc.ScalarFuncId.LE_I8;
import static io.github.zeus.rpc.ScalarFuncId.NE_STR;
import static io.github.zeus.rpc.ScalarFuncId.EQ_I32;
import static io.github.zeus.rpc.ScalarFuncId.NE_F8;
import static io.github.zeus.rpc.ScalarFuncId.GT_I64;
import static io.github.zeus.rpc.ScalarFuncId.GE_I32;

import static io.github.zeus.rpc.ColumnType.FLOAT8;
import static io.github.zeus.rpc.ColumnType.INT16;
import static io.github.zeus.rpc.ColumnType.INT8;
import static io.github.zeus.rpc.ColumnType.FLOAT4;
import static io.github.zeus.rpc.ColumnType.INT32;
import static io.github.zeus.rpc.ColumnType.STRING;
import static io.github.zeus.rpc.ColumnType.BOOL;
import static io.github.zeus.rpc.ColumnType.INT64;

/**
 * This class is generated.
 */
public class ComparatorFunctionSignatures {
  
    public static final ZeusFunctionEntry GREATER_THAN_BOOL_BOOL = ZeusFunctionEntry.from(GT_BOOL, "greater_than", BOOL, BOOL);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_INT8 = ZeusFunctionEntry.from(GT_I8, "greater_than", INT8, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_INT16 = ZeusFunctionEntry.from(GT_I16, "greater_than", INT8, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_INT32 = ZeusFunctionEntry.from(GT_I32, "greater_than", INT8, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_INT64 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT8, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_FLOAT4 = ZeusFunctionEntry.from(GT_F4, "greater_than", INT8, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_INT8_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", INT8, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_INT8 = ZeusFunctionEntry.from(GT_I16, "greater_than", INT16, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_INT16 = ZeusFunctionEntry.from(GT_I16, "greater_than", INT16, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_INT32 = ZeusFunctionEntry.from(GT_I32, "greater_than", INT16, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_INT64 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT16, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_FLOAT4 = ZeusFunctionEntry.from(GT_F4, "greater_than", INT16, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_INT16_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", INT16, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_INT8 = ZeusFunctionEntry.from(GT_I32, "greater_than", INT32, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_INT16 = ZeusFunctionEntry.from(GT_I32, "greater_than", INT32, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_INT32 = ZeusFunctionEntry.from(GT_I32, "greater_than", INT32, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_INT64 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT32, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_FLOAT4 = ZeusFunctionEntry.from(GT_F4, "greater_than", INT32, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_INT32_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", INT32, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_INT8 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT64, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_INT16 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT64, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_INT32 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT64, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_INT64 = ZeusFunctionEntry.from(GT_I64, "greater_than", INT64, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_FLOAT4 = ZeusFunctionEntry.from(GT_F4, "greater_than", INT64, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_INT64_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", INT64, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_INT8 = ZeusFunctionEntry.from(GT_F4, "greater_than", FLOAT4, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_INT16 = ZeusFunctionEntry.from(GT_F4, "greater_than", FLOAT4, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_INT32 = ZeusFunctionEntry.from(GT_F4, "greater_than", FLOAT4, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_INT64 = ZeusFunctionEntry.from(GT_F4, "greater_than", FLOAT4, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(GT_F4, "greater_than", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_INT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_INT16 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_INT32 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_INT64 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(GT_F8, "greater_than", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_STRING_STRING = ZeusFunctionEntry.from(GT_STR, "greater_than", STRING, STRING);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_BOOL_BOOL = ZeusFunctionEntry.from(GE_BOOL, "greater_than_or_equal_to", BOOL, BOOL);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_INT8 = ZeusFunctionEntry.from(GE_I8, "greater_than_or_equal_to", INT8, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_INT16 = ZeusFunctionEntry.from(GE_I16, "greater_than_or_equal_to", INT8, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_INT32 = ZeusFunctionEntry.from(GE_I32, "greater_than_or_equal_to", INT8, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_INT64 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT8, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_FLOAT4 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", INT8, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT8_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", INT8, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_INT8 = ZeusFunctionEntry.from(GE_I16, "greater_than_or_equal_to", INT16, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_INT16 = ZeusFunctionEntry.from(GE_I16, "greater_than_or_equal_to", INT16, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_INT32 = ZeusFunctionEntry.from(GE_I32, "greater_than_or_equal_to", INT16, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_INT64 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT16, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_FLOAT4 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", INT16, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT16_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", INT16, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_INT8 = ZeusFunctionEntry.from(GE_I32, "greater_than_or_equal_to", INT32, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_INT16 = ZeusFunctionEntry.from(GE_I32, "greater_than_or_equal_to", INT32, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_INT32 = ZeusFunctionEntry.from(GE_I32, "greater_than_or_equal_to", INT32, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_INT64 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT32, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_FLOAT4 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", INT32, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT32_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", INT32, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_INT8 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT64, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_INT16 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT64, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_INT32 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT64, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_INT64 = ZeusFunctionEntry.from(GE_I64, "greater_than_or_equal_to", INT64, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_FLOAT4 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", INT64, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_INT64_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", INT64, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_INT8 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", FLOAT4, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_INT16 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", FLOAT4, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_INT32 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", FLOAT4, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_INT64 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", FLOAT4, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(GE_F4, "greater_than_or_equal_to", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_INT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, INT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_INT16 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, INT16);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_INT32 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, INT32);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_INT64 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, INT64);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(GE_F8, "greater_than_or_equal_to", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry GREATER_THAN_OR_EQUAL_TO_STRING_STRING = ZeusFunctionEntry.from(GE_STR, "greater_than_or_equal_to", STRING, STRING);
    public static final ZeusFunctionEntry LESS_THAN_BOOL_BOOL = ZeusFunctionEntry.from(LT_BOOL, "less_than", BOOL, BOOL);
    public static final ZeusFunctionEntry LESS_THAN_INT8_INT8 = ZeusFunctionEntry.from(LT_I8, "less_than", INT8, INT8);
    public static final ZeusFunctionEntry LESS_THAN_INT8_INT16 = ZeusFunctionEntry.from(LT_I16, "less_than", INT8, INT16);
    public static final ZeusFunctionEntry LESS_THAN_INT8_INT32 = ZeusFunctionEntry.from(LT_I32, "less_than", INT8, INT32);
    public static final ZeusFunctionEntry LESS_THAN_INT8_INT64 = ZeusFunctionEntry.from(LT_I64, "less_than", INT8, INT64);
    public static final ZeusFunctionEntry LESS_THAN_INT8_FLOAT4 = ZeusFunctionEntry.from(LT_F4, "less_than", INT8, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_INT8_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", INT8, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_INT16_INT8 = ZeusFunctionEntry.from(LT_I16, "less_than", INT16, INT8);
    public static final ZeusFunctionEntry LESS_THAN_INT16_INT16 = ZeusFunctionEntry.from(LT_I16, "less_than", INT16, INT16);
    public static final ZeusFunctionEntry LESS_THAN_INT16_INT32 = ZeusFunctionEntry.from(LT_I32, "less_than", INT16, INT32);
    public static final ZeusFunctionEntry LESS_THAN_INT16_INT64 = ZeusFunctionEntry.from(LT_I64, "less_than", INT16, INT64);
    public static final ZeusFunctionEntry LESS_THAN_INT16_FLOAT4 = ZeusFunctionEntry.from(LT_F4, "less_than", INT16, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_INT16_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", INT16, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_INT32_INT8 = ZeusFunctionEntry.from(LT_I32, "less_than", INT32, INT8);
    public static final ZeusFunctionEntry LESS_THAN_INT32_INT16 = ZeusFunctionEntry.from(LT_I32, "less_than", INT32, INT16);
    public static final ZeusFunctionEntry LESS_THAN_INT32_INT32 = ZeusFunctionEntry.from(LT_I32, "less_than", INT32, INT32);
    public static final ZeusFunctionEntry LESS_THAN_INT32_INT64 = ZeusFunctionEntry.from(LT_I64, "less_than", INT32, INT64);
    public static final ZeusFunctionEntry LESS_THAN_INT32_FLOAT4 = ZeusFunctionEntry.from(LT_F4, "less_than", INT32, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_INT32_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", INT32, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_INT64_INT8 = ZeusFunctionEntry.from(LT_I64, "less_than", INT64, INT8);
    public static final ZeusFunctionEntry LESS_THAN_INT64_INT16 = ZeusFunctionEntry.from(LT_I64, "less_than", INT64, INT16);
    public static final ZeusFunctionEntry LESS_THAN_INT64_INT32 = ZeusFunctionEntry.from(LT_I64, "less_than", INT64, INT32);
    public static final ZeusFunctionEntry LESS_THAN_INT64_INT64 = ZeusFunctionEntry.from(LT_I64, "less_than", INT64, INT64);
    public static final ZeusFunctionEntry LESS_THAN_INT64_FLOAT4 = ZeusFunctionEntry.from(LT_F4, "less_than", INT64, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_INT64_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", INT64, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_INT8 = ZeusFunctionEntry.from(LT_F4, "less_than", FLOAT4, INT8);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_INT16 = ZeusFunctionEntry.from(LT_F4, "less_than", FLOAT4, INT16);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_INT32 = ZeusFunctionEntry.from(LT_F4, "less_than", FLOAT4, INT32);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_INT64 = ZeusFunctionEntry.from(LT_F4, "less_than", FLOAT4, INT64);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(LT_F4, "less_than", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_INT8 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, INT8);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_INT16 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, INT16);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_INT32 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, INT32);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_INT64 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, INT64);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(LT_F8, "less_than", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_STRING_STRING = ZeusFunctionEntry.from(LT_STR, "less_than", STRING, STRING);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_BOOL_BOOL = ZeusFunctionEntry.from(LE_BOOL, "less_than_or_equal_to", BOOL, BOOL);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_INT8 = ZeusFunctionEntry.from(LE_I8, "less_than_or_equal_to", INT8, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_INT16 = ZeusFunctionEntry.from(LE_I16, "less_than_or_equal_to", INT8, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_INT32 = ZeusFunctionEntry.from(LE_I32, "less_than_or_equal_to", INT8, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_INT64 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT8, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_FLOAT4 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", INT8, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT8_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", INT8, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_INT8 = ZeusFunctionEntry.from(LE_I16, "less_than_or_equal_to", INT16, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_INT16 = ZeusFunctionEntry.from(LE_I16, "less_than_or_equal_to", INT16, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_INT32 = ZeusFunctionEntry.from(LE_I32, "less_than_or_equal_to", INT16, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_INT64 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT16, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_FLOAT4 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", INT16, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT16_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", INT16, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_INT8 = ZeusFunctionEntry.from(LE_I32, "less_than_or_equal_to", INT32, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_INT16 = ZeusFunctionEntry.from(LE_I32, "less_than_or_equal_to", INT32, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_INT32 = ZeusFunctionEntry.from(LE_I32, "less_than_or_equal_to", INT32, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_INT64 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT32, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_FLOAT4 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", INT32, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT32_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", INT32, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_INT8 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT64, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_INT16 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT64, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_INT32 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT64, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_INT64 = ZeusFunctionEntry.from(LE_I64, "less_than_or_equal_to", INT64, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_FLOAT4 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", INT64, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_INT64_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", INT64, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_INT8 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", FLOAT4, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_INT16 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", FLOAT4, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_INT32 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", FLOAT4, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_INT64 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", FLOAT4, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(LE_F4, "less_than_or_equal_to", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_INT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, INT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_INT16 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, INT16);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_INT32 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, INT32);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_INT64 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, INT64);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(LE_F8, "less_than_or_equal_to", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry LESS_THAN_OR_EQUAL_TO_STRING_STRING = ZeusFunctionEntry.from(LE_STR, "less_than_or_equal_to", STRING, STRING);
    public static final ZeusFunctionEntry EQUAL_BOOL_BOOL = ZeusFunctionEntry.from(EQ_BOOL, "equal", BOOL, BOOL);
    public static final ZeusFunctionEntry EQUAL_INT8_INT8 = ZeusFunctionEntry.from(EQ_I8, "equal", INT8, INT8);
    public static final ZeusFunctionEntry EQUAL_INT8_INT16 = ZeusFunctionEntry.from(EQ_I16, "equal", INT8, INT16);
    public static final ZeusFunctionEntry EQUAL_INT8_INT32 = ZeusFunctionEntry.from(EQ_I32, "equal", INT8, INT32);
    public static final ZeusFunctionEntry EQUAL_INT8_INT64 = ZeusFunctionEntry.from(EQ_I64, "equal", INT8, INT64);
    public static final ZeusFunctionEntry EQUAL_INT8_FLOAT4 = ZeusFunctionEntry.from(EQ_F4, "equal", INT8, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_INT8_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", INT8, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_INT16_INT8 = ZeusFunctionEntry.from(EQ_I16, "equal", INT16, INT8);
    public static final ZeusFunctionEntry EQUAL_INT16_INT16 = ZeusFunctionEntry.from(EQ_I16, "equal", INT16, INT16);
    public static final ZeusFunctionEntry EQUAL_INT16_INT32 = ZeusFunctionEntry.from(EQ_I32, "equal", INT16, INT32);
    public static final ZeusFunctionEntry EQUAL_INT16_INT64 = ZeusFunctionEntry.from(EQ_I64, "equal", INT16, INT64);
    public static final ZeusFunctionEntry EQUAL_INT16_FLOAT4 = ZeusFunctionEntry.from(EQ_F4, "equal", INT16, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_INT16_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", INT16, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_INT32_INT8 = ZeusFunctionEntry.from(EQ_I32, "equal", INT32, INT8);
    public static final ZeusFunctionEntry EQUAL_INT32_INT16 = ZeusFunctionEntry.from(EQ_I32, "equal", INT32, INT16);
    public static final ZeusFunctionEntry EQUAL_INT32_INT32 = ZeusFunctionEntry.from(EQ_I32, "equal", INT32, INT32);
    public static final ZeusFunctionEntry EQUAL_INT32_INT64 = ZeusFunctionEntry.from(EQ_I64, "equal", INT32, INT64);
    public static final ZeusFunctionEntry EQUAL_INT32_FLOAT4 = ZeusFunctionEntry.from(EQ_F4, "equal", INT32, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_INT32_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", INT32, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_INT64_INT8 = ZeusFunctionEntry.from(EQ_I64, "equal", INT64, INT8);
    public static final ZeusFunctionEntry EQUAL_INT64_INT16 = ZeusFunctionEntry.from(EQ_I64, "equal", INT64, INT16);
    public static final ZeusFunctionEntry EQUAL_INT64_INT32 = ZeusFunctionEntry.from(EQ_I64, "equal", INT64, INT32);
    public static final ZeusFunctionEntry EQUAL_INT64_INT64 = ZeusFunctionEntry.from(EQ_I64, "equal", INT64, INT64);
    public static final ZeusFunctionEntry EQUAL_INT64_FLOAT4 = ZeusFunctionEntry.from(EQ_F4, "equal", INT64, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_INT64_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", INT64, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_INT8 = ZeusFunctionEntry.from(EQ_F4, "equal", FLOAT4, INT8);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_INT16 = ZeusFunctionEntry.from(EQ_F4, "equal", FLOAT4, INT16);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_INT32 = ZeusFunctionEntry.from(EQ_F4, "equal", FLOAT4, INT32);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_INT64 = ZeusFunctionEntry.from(EQ_F4, "equal", FLOAT4, INT64);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(EQ_F4, "equal", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_INT8 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, INT8);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_INT16 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, INT16);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_INT32 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, INT32);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_INT64 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, INT64);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry EQUAL_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(EQ_F8, "equal", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry EQUAL_STRING_STRING = ZeusFunctionEntry.from(EQ_STR, "equal", STRING, STRING);
    public static final ZeusFunctionEntry NOT_EQUAL_BOOL_BOOL = ZeusFunctionEntry.from(NE_BOOL, "not_equal", BOOL, BOOL);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_INT8 = ZeusFunctionEntry.from(NE_I8, "not_equal", INT8, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_INT16 = ZeusFunctionEntry.from(NE_I16, "not_equal", INT8, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_INT32 = ZeusFunctionEntry.from(NE_I32, "not_equal", INT8, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_INT64 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT8, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_FLOAT4 = ZeusFunctionEntry.from(NE_F4, "not_equal", INT8, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_INT8_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", INT8, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_INT8 = ZeusFunctionEntry.from(NE_I16, "not_equal", INT16, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_INT16 = ZeusFunctionEntry.from(NE_I16, "not_equal", INT16, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_INT32 = ZeusFunctionEntry.from(NE_I32, "not_equal", INT16, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_INT64 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT16, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_FLOAT4 = ZeusFunctionEntry.from(NE_F4, "not_equal", INT16, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_INT16_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", INT16, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_INT8 = ZeusFunctionEntry.from(NE_I32, "not_equal", INT32, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_INT16 = ZeusFunctionEntry.from(NE_I32, "not_equal", INT32, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_INT32 = ZeusFunctionEntry.from(NE_I32, "not_equal", INT32, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_INT64 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT32, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_FLOAT4 = ZeusFunctionEntry.from(NE_F4, "not_equal", INT32, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_INT32_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", INT32, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_INT8 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT64, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_INT16 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT64, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_INT32 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT64, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_INT64 = ZeusFunctionEntry.from(NE_I64, "not_equal", INT64, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_FLOAT4 = ZeusFunctionEntry.from(NE_F4, "not_equal", INT64, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_INT64_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", INT64, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_INT8 = ZeusFunctionEntry.from(NE_F4, "not_equal", FLOAT4, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_INT16 = ZeusFunctionEntry.from(NE_F4, "not_equal", FLOAT4, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_INT32 = ZeusFunctionEntry.from(NE_F4, "not_equal", FLOAT4, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_INT64 = ZeusFunctionEntry.from(NE_F4, "not_equal", FLOAT4, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_FLOAT4 = ZeusFunctionEntry.from(NE_F4, "not_equal", FLOAT4, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT4_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT4, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_INT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, INT8);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_INT16 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, INT16);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_INT32 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, INT32);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_INT64 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, INT64);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_FLOAT4 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, FLOAT4);
    public static final ZeusFunctionEntry NOT_EQUAL_FLOAT8_FLOAT8 = ZeusFunctionEntry.from(NE_F8, "not_equal", FLOAT8, FLOAT8);
    public static final ZeusFunctionEntry NOT_EQUAL_STRING_STRING = ZeusFunctionEntry.from(NE_STR, "not_equal", STRING, STRING);
}